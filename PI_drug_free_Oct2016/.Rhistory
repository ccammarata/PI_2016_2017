k<-1
for(i in 1:2){
for(j in 1:2){
points(Tita2[,i,j],type="b",col=cols[i],
pch=pchs[k],lty=ltys[j])
k <- k+1
}
}
#legend()
data(Titanic)
sums <- apply(Titanic, c(1,2,3), "sums")
Tita2 <- Titanic[,,,1]/sums
par(mar=c(5,6,4,4))
plot(1,1, type="n", xlim=c(0,5), ylim=c(0,1) ,
main="Passengers who died on the Titanic",
xaxt="n", yaxt="n", xlab="",
ylab="proportion os deaths \n by demographic group")
axis(2, at=c(0,.5,1))
axis(1, at=c(1,2,3,4), labels=c("1st", "2nd", "3rd", "crew"), las=2)
cols <- c("black", "red")
ltys <- c(1,2)
pch <- c(16,3,15,1)
k<-1
for(i in 1:2){
for(j in 1:2){
points(Tita2[,i,j], type="b",col=cols[i], lty=ltys[j],pch=pchs[k])
k <- k+1
}
}
#legend()
data(Titanic)
sums <- apply(Titanic, c(1,2,3), "sums")
Tita2 <- Titanic[,,,1]/sums
par(mar=c(5,6,4,4))
plot(1,1, type="n", xlim=c(0,5), ylim=c(0,1) ,
main="Passengers who died on the Titanic",
xaxt="n", yaxt="n", xlab="",
ylab="proportion os deaths \n by demographic group")
axis(2, at=c(0,.5,1))
axis(1, at=c(1,2,3,4), labels=c("1st", "2nd", "3rd", "crew"), las=2)
cols <- c("black", "red")
ltys <- c(1,2)
pch <- c(16,3,15,1)
k<-1
for(i in 1:2){
for(j in 1:2){
points(Tita2[,i,j], type="b",col=cols[i], lty=ltys[j],pch=pchs[k])
k <- k+1
}
}
#legend()
data(Titanic)
sums <- apply(Titanic, c(1,2,3), "sums")
Tita2 <- Titanic[,,,1]/sums
par(mar=c(5,6,4,4))
plot(1,1, type="n", xlim=c(0,5), ylim=c(0,1) ,
main="Passengers who died on the Titanic",
xaxt="n", yaxt="n", xlab="",
ylab="proportion os deaths \n by demographic group")
axis(2, at=c(0,.5,1))
axis(1, at=c(1,2,3,4), labels=c("1st", "2nd", "3rd", "crew"), las=2)
cols <- c("black", "red")
ltys <- c(1,2)
pch <- c(16,3,15,1)
k<-1
for(i in 1:2){
for(j in 1:2){
points(Tita2[i,j,], type="b",col=cols[i], lty=ltys[j],pch=pchs[k])
k <- k+1
}
}
#legend()
data(Titanic)
sums <- apply(Titanic, c(1,2,3), "sums")
Tita2 <- Titanic[,,,1]/sums
par(mar=c(5,6,4,4))
plot(1,1, type="n", xlim=c(0,5), ylim=c(0,1) ,
main="Passengers who died on the Titanic",
xaxt="n", yaxt="n", xlab="",
ylab="proportion os deaths \n by demographic group")
axis(2, at=c(0,.5,1))
axis(1, at=c(1,2,3,4), labels=c("1st", "2nd", "3rd", "crew"), las=2)
cols <- c("black", "red")
ltys <- c(1,2)
pch <- c(16,3,15,1)
k<-1
for(i in 1:2){
for(j in 1:2){
points(Tita2[,i,j], type="b",col=cols[i], lty=ltys[j],pch=pchs[k])
k <- k+1
}
}
#legend()
data(Titanic)
sums <- apply(Titanic, c(1,2,3), "sums")
Tita2 <- Titanic[,,,1]/sums
par(mar=c(5,6,4,4))
plot(1,1, type="n", xlim=c(0,5), ylim=c(0,1) ,
main="Passengers who died on the Titanic",
xaxt="n", yaxt="n", xlab="",
ylab="proportion os deaths \n by demographic group")
axis(2, at=c(0,.5,1))
axis(1, at=c(1,2,3,4), labels=c("1st", "2nd", "3rd", "crew"), las=2)
cols <- c("black", "red")
ltys <- c(1,2)
pch <- c(16,3,15,1)
k<-1
for(i in 1:2){
for(j in 1:2){
points(Tita2[,i,j], type="b",col=cols[i], lty=ltys[j],pch=pchs[k])
k <- k+1
}
}
legend("topright",legend=c("male adult", "femaile adult",
"male child", "female child"), pch=c(3,1,16,15)
col=rep(cols,2), lty=c(2,2,1,1) )
data(Titanic)
sums <- apply(Titanic, c(1,2,3), "sums")
Tita2 <- Titanic[,,,1]/sums
par(mar=c(5,6,4,4))
plot(1,1, type="n", xlim=c(0,5), ylim=c(0,1) ,
main="Passengers who died on the Titanic",
xaxt="n", yaxt="n", xlab="",
ylab="proportion os deaths \n by demographic group")
axis(2, at=c(0,.5,1))
axis(1, at=c(1,2,3,4), labels=c("1st", "2nd", "3rd", "crew"), las=2)
cols <- c("black", "red")
ltys <- c(1,2)
pch <- c(16,3,15,1)
k<-1
for(i in 1:2){
for(j in 1:2){
points(Tita2[,i,j], type="b",col=cols[i], lty=ltys[j],pch=pchs[k])
k <- k+1
}
}
legend("topright",
legend=c("male adult", "femaile adult","male child", "female child"),
pch=c(3,1,16,15), col=rep(cols,2), lty=c(2,2,1,1))
mie <- read.csv("MIE.csv")
head(mie)
mie$id <- as.factor(mie$id)
mie$visit <- as.factor(mie$visit)
sub <- subset(mie, room == "bedroom")
xyplot(mie_final ~ timepoint | visit * id, data = sub, type = "l")
data1 <- read.table(~:\\Desktop\\hw1.dat)
data1 <- read.table(~\\Desktop\\hw1.dat)
data1 <- read.table(~/Desktop/hw1.dat)
data1 <- read.table("C:\\Users\\hw1.dat")
data1 <- read.table("C:\\Desktop\\hw1.dat")
data1 <- read.table("C:\\Users\\celinejoiris\\Desktop\\hw1.dat")
data1 <- read.table("~\\Users\\celinejoiris\\Desktop\\hw1.dat")
data1 <- read.table("C:/Users/fjt36/Documents/hw1.dat")
data1 <- read.table("C:/Users/fjt36/Documents/hw1.dat")
str(df)
str(data1)
str(data1)
str(df)
df <- read.table("C:/Users/fjt36/Documents/hw1.dat")
exp(-5)
.00674/(1+.00674)
exp(3.3)
27.113*.00674
0.183/(1+0.183)
A = matrix(nrow = 3, ncol = 40)
A
B = matrix(nrow = 3, ncol =1)
B = matrix(nrow = 3, ncol =1, c(0.2, 0.3, 0.5))
B
A[,1] = 1
A
A[,2] = A%*%B
A * B
A % B
A x B
A[,2] = A[,1] %*% B
A
A[,1] * B
A[,1] %*% B
> source("http://s3-us-west-2.amazonaws.com/10x.files/code/rkit-install-1.1.0.R")
source("http://s3-us-west-2.amazonaws.com/10x.files/code/rkit-install-1.1.0.R")
library(cellranger)
version()
set.seed(1234)
library(car)
library(foreign)
library(rstanarm)
library(BayesFactor)
library(knitr)
library(broom)
library(magrittr)
library(dplyr)
fixed_digits <- function(xs, n = 2) {
formatC(xs, digits = n, format = "f")
}
format_pval <- function(ps, html = FALSE) {
tiny <- ifelse(html, "&lt;&nbsp;.001", "< .001")
ps_chr <- ps %>% fixed_digits(3)
ps_chr[ps < 0.001] <- tiny
ps_chr
}
format_model_table <- . %>%
mutate(p.value = format_pval(p.value))
d1 <- read.spss("https://github.com/felixthoemmes/hwdatasets/blob/master/hw4_marathon_2014.sav?raw=true",
to.data.frame = TRUE)
#making factors out of variables
d1$Sex <- factor(d1$Sex)
d1$Country <- factor(d1$Country)
d1$newfac <- d1$Country:d1$Sex
#checking levels and underlying contrasts
levels(d1$Country)
contrasts(d1$Country)
#descriptives - here using psych package
library(psych)
describe(d1$Time,skew = FALSE)
describe(d1$Time[d1$Sex=="F"],skew=FALSE)
describe(d1$Time[d1$Sex=="M"],skew=FALSE)
describe(d1$Time[d1$Country=="ETH"],skew=FALSE)
describe(d1$Time[d1$Country=="KEN"],skew=FALSE)
describe(d1$Time[d1$Country=="USA"],skew=FALSE)
set.seed(1234)
d1$Country <- relevel(d1$Country,ref="KEN")
contrasts(d1$Country) <- matrix(c(1/3, .5,1/3, -.5,-2/3, 0), ncol = 2,byrow=TRUE)
lm4 <- lm(d1$Time ~ d1$Country)
lm4 %>% tidy(conf.int=TRUE) %>% format_model_table %>% kable(digits=2)
blm4 <- stan_glm(d1$Time ~ d1$Country,prior=normal(0,100),prior_intercept = normal(0,100),refresh=-1)
kable(tidyMCMC(blm4,conf.int=TRUE),digits=3)
set.seed(1234)
d1$Country <- relevel(d1$Country,ref="KEN")
d1$bigfactor <-d1$Country:d1$Sex
contrasts(d1$bigfactor) <- contr.treatment(6,base=4)
contrasts(d1$bigfactor)
lm5 <- lm(d1$Time ~ d1$bigfactor)
lm5 %>% tidy(conf.int=TRUE) %>% format_model_table %>% kable(digits=2)
lmBF(Time~bigfactor,data=d1)
blm5 <- stan_glm(Time~bigfactor,data=d1,prior = normal(0,100),prior_intercept = normal(0,100),refresh=-1)
kable(tidyMCMC(blm5,conf.int=TRUE),digits=3)
View(d1)
View(d1)
set.seed(1234)
d1$Country <- relevel(d1$Country,ref="KEN")
contrasts(d1$Country) <- matrix(c(1/3, .5,1/3, -.5,-2/3, 0), ncol = 2,byrow=TRUE)
lm4 <- lm(d1$Time ~ d1$Country)
lm4 %>% tidy(conf.int=TRUE) %>% format_model_table %>% kable(digits=2)
blm4 <- stan_glm(d1$Time ~ d1$Country,prior=normal(0,100),prior_intercept = normal(0,100),refresh=-1)
kable(tidyMCMC(blm4,conf.int=TRUE),digits=3)
set.seed(1234)
library(car)
library(foreign)
library(rstanarm)
library(BayesFactor)
library(knitr)
library(broom)
library(magrittr)
library(dplyr)
fixed_digits <- function(xs, n = 2) {
formatC(xs, digits = n, format = "f")
}
format_pval <- function(ps, html = FALSE) {
tiny <- ifelse(html, "&lt;&nbsp;.001", "< .001")
ps_chr <- ps %>% fixed_digits(3)
ps_chr[ps < 0.001] <- tiny
ps_chr
}
format_model_table <- . %>%
mutate(p.value = format_pval(p.value))
d1 <- read.spss("https://github.com/felixthoemmes/hwdatasets/blob/master/hw4_marathon_2014.sav?raw=true",
to.data.frame = TRUE)
#making factors out of variables
d1$Sex <- factor(d1$Sex)
d1$Country <- factor(d1$Country)
d1$newfac <- d1$Country:d1$Sex
#checking levels and underlying contrasts
levels(d1$Country)
contrasts(d1$Country)
#descriptives - here using psych package
library(psych)
describe(d1$Time,skew = FALSE)
describe(d1$Time[d1$Sex=="F"],skew=FALSE)
describe(d1$Time[d1$Sex=="M"],skew=FALSE)
describe(d1$Time[d1$Country=="ETH"],skew=FALSE)
describe(d1$Time[d1$Country=="KEN"],skew=FALSE)
describe(d1$Time[d1$Country=="USA"],skew=FALSE)
set.seed(1234)
d1$Country <- relevel(d1$Country,ref="KEN")
contrasts(d1$Country) <- matrix(c(1/3, .5,1/3, -.5,-2/3, 0), ncol = 2,byrow=TRUE)
lm4 <- lm(d1$Time ~ d1$Country)
lm4 %>% tidy(conf.int=TRUE) %>% format_model_table %>% kable(digits=2)
blm4 <- stan_glm(d1$Time ~ d1$Country,prior=normal(0,100),prior_intercept = normal(0,100),refresh=-1)
kable(tidyMCMC(blm4,conf.int=TRUE),digits=3)
#Ethopia as base group
d1$Country <- relevel(d1$Country,ref="KEN")
contrasts(d1$Country) <- contr.sum(3)
lm3b <- lm(d1$Time ~ d1$Country)
lm3b %>% tidy(conf.int=TRUE) %>% format_model_table %>% kable(digits=2)
blm3b <- stan_glm(d1$Time ~ d1$Country,prior=normal(0,100),prior_intercept = normal(0,100),refresh=-1)
kable(tidyMCMC(blm3b,conf.int=TRUE),digits=3)
lmBF(Time ~ Country,data=d1)
set.seed(1234)
d1$Country <- relevel(d1$Country,ref="KEN")
d1$bigfactor <-d1$Country:d1$Sex
contrasts(d1$bigfactor) <- contr.treatment(6,base=4)
contrasts(d1$bigfactor)
lm5 <- lm(d1$Time ~ d1$bigfactor)
lm5 %>% tidy(conf.int=TRUE) %>% format_model_table %>% kable(digits=2)
lmBF(Time~bigfactor,data=d1)
blm5 <- stan_glm(Time~bigfactor,data=d1,prior = normal(0,100),prior_intercept = normal(0,100),refresh=-1)
kable(tidyMCMC(blm5,conf.int=TRUE),digits=3)
set.seed(1234)
lm1 <- lm(d1$Time ~ d1$Sex)
lm1 %>% tidy(conf.int=TRUE) %>% format_model_table %>% kable(digits=2)
lmBF(Time ~ Sex,data=d1)
lm2a <- lm(d1$Time ~ d1$Country)
lm2a %>% tidy(conf.int=TRUE) %>% format_model_table %>% kable(digits=2)
lm2a <- lm(d1$Time ~ d1$Country)
lm2a %>% tidy(conf.int=TRUE) %>% format_model_table %>% kable(digits=2)
d1$Country <- relevel(d1$Country,ref="USA")
lm2b <- lm(d1$Time ~ d1$Country)
lm2b %>% tidy(conf.int=TRUE) %>% format_model_table %>% kable(digits=2)
lm3a <- lm(d1$Time ~ d1$Country)
lm3a %>% tidy(conf.int=TRUE) %>% format_model_table %>% kable(digits=2)
system("echo $PATH")
set.seed(1234)
d1$Country <- relevel(d1$Country,ref="KEN")
d1$bigfactor <-d1$Country:d1$Sex
contrasts(d1$bigfactor) <- contr.treatment(6,base=4)
contrasts(d1$bigfactor)
lm5 <- lm(d1$Time ~ d1$bigfactor)
lm5 %>% tidy(conf.int=TRUE) %>% format_model_table %>% kable(digits=2)
lmBF(Time~bigfactor,data=d1)
blm5 <- stan_glm(Time~bigfactor,data=d1,prior = normal(0,100),prior_intercept = normal(0,100),refresh=-1)
kable(tidyMCMC(blm5,conf.int=TRUE),digits=3)
set.seed(1234)
library(car)
library(foreign)
library(rstanarm)
library(BayesFactor)
library(knitr)
library(broom)
library(magrittr)
library(dplyr)
fixed_digits <- function(xs, n = 2) {
formatC(xs, digits = n, format = "f")
}
format_pval <- function(ps, html = FALSE) {
tiny <- ifelse(html, "&lt;&nbsp;.001", "< .001")
ps_chr <- ps %>% fixed_digits(3)
ps_chr[ps < 0.001] <- tiny
ps_chr
}
format_model_table <- . %>%
mutate(p.value = format_pval(p.value))
d1 <- read.spss("https://github.com/felixthoemmes/hwdatasets/blob/master/hw4_marathon_2014.sav?raw=true",
to.data.frame = TRUE)
#making factors out of variables
d1$Sex <- factor(d1$Sex)
d1$Country <- factor(d1$Country)
d1$newfac <- d1$Country:d1$Sex
#checking levels and underlying contrasts
levels(d1$Country)
contrasts(d1$Country)
#descriptives - here using psych package
library(psych)
describe(d1$Time,skew = FALSE)
describe(d1$Time[d1$Sex=="F"],skew=FALSE)
describe(d1$Time[d1$Sex=="M"],skew=FALSE)
describe(d1$Time[d1$Country=="ETH"],skew=FALSE)
describe(d1$Time[d1$Country=="KEN"],skew=FALSE)
describe(d1$Time[d1$Country=="USA"],skew=FALSE)
set.seed(1234)
d1$Country <- relevel(d1$Country,ref="KEN")
d1$bigfactor <-d1$Country:d1$Sex
contrasts(d1$bigfactor) <- contr.treatment(6,base=4)
contrasts(d1$bigfactor)
lm5 <- lm(d1$Time ~ d1$bigfactor)
lm5 %>% tidy(conf.int=TRUE) %>% format_model_table %>% kable(digits=2)
lmBF(Time~bigfactor,data=d1)
blm5 <- stan_glm(Time~bigfactor,data=d1,prior = normal(0,100),prior_intercept = normal(0,100),refresh=-1)
kable(tidyMCMC(blm5,conf.int=TRUE),digits=3)
lmBF(Time~bigfactor,data=d1)
install.packages("ez")
library(ez)
options(contrasts=c("contr.sum", "contr.poly"))
setwd("~/Documents/GitHub/PI_2016_2017/PI_drug_free_Oct2016")
library(foreign)
library(psych)
library(reshape2)
library(ggplot2)
library(car)
library(ez)
library(Rmisc)
library(gmodels)
library(wesanderson)
# for AB acquisition
sessList <- list(23,24,25)#list session nubmers here
ratList <- list(25,35,46,49,53,57)#list rat number here
x <- length(sessList)
y <- length(ratList)
rowsNeeded <- (x*y)
#to indicate lesion condition of animals
sapGroup = list(28,36,50,63,64)
conGroup = list(25,35,46,49,53,57)
ABsummary <- matrix(data = NA, nrow = rowsNeeded, ncol=3)
colnames(ABsummary)<- c('ratID', 'session', 'accuracy')
i = 1
for (sessNum in sessList){
for (rat in ratList) {
filename <- paste("U3_",rat,"_",sessNum,".csv", sep="")
criteriaFilename <- paste("U3_CriteriaMet",rat,"_",sessNum,".csv", sep="")
print(filename)
currentData <- read.csv(filename, header=TRUE, sep="\t")
currentData$resp2 <- ifelse(currentData$Response == "correct", 1,0)
currentAB <- subset(currentData, trialType == "AB")
ABacc <- mean(currentAB$resp2)
ABsummary[i,0:3] <- c(rat, sessNum, ABacc)
i=i+1
}
}
ABsummary <- data.frame(ABsummary)
ABsummary$ratID <- as.factor(ABsummary$ratID)
ABsummary$session <- as.factor(ABsummary$session)
ABsummary$condition <- ifelse(is.element(ABsummary$ratID, sapGroup) ,'sap','control')
ABsummaryTable <- aggregate(accuracy~session+condition, data=ABsummary, FUN=(mean))
tempTable <- aggregate(accuracy~session, data=ABsummary, FUN=(sd))
ABsummaryTable<- as.data.frame(ABsummaryTable)
ABsummaryTable$sd <- tempTable$accuracy*100
tempTable$accuracy <- tempTable$accuracy/sqrt(y)
ABsummaryTable$se <- tempTable$accuracy*100
ABsummaryTable$accuracy <- ABsummaryTable$accuracy * 100
#for full task
sessList <- list(27, 28, 29, 30)#list session nubmers here
ratList <- list(25,35,46,49,53,57)#list rat number here
x <- length(sessList)
y <- length(ratList)
rowsNeeded <- (x*y)
#to indicate lesion condition of animals
sapGroup = list(28, 36,50,63,64)
conGroup = list(25,35,46,49,53,57)
FULLsummary <- matrix(data = NA, nrow = rowsNeeded, ncol=5)
colnames(FULLsummary)<- c('ratID', 'session', 'AB_acc', 'AC_acc', 'DE_acc')
i = 1
for (sessNum in sessList){
for (rat in ratList) {
filename <- paste("U3_",rat,"_",sessNum,".csv", sep="")
criteriaFilename <- paste("U3_CriteriaMet",rat,"_",sessNum,".csv", sep="")
print(filename)
currentData <- read.csv(filename, header=TRUE, sep="\t")
currentData$resp2 <- ifelse(currentData$Response == "correct", 1,0)
currentAB <- subset(currentData, trialType == "AB")
ABacc <- mean(currentAB$resp2)
currentDE <- subset(currentData, trialType == "DE")
DEacc <- mean(currentDE$resp2)
currentAC <- subset(currentData, trialType == "CA")
ACacc <- mean(currentAC$resp2)
FULLsummary[i,0:5] <- c(rat, sessNum, ABacc, ACacc, DEacc)
i=i+1
}
}
#prepare wide and long form data frames for full task
FULLfinalSummaryW <- data.frame(FULLsummary)
FULLfinalSummaryW$condition <- ifelse(is.element(FULLfinalSummaryW$ratID, sapGroup) ,'sap','control')
z = rowsNeeded*3
FULLfinalSummaryL <- reshape(FULLfinalSummaryW, varying = c('AB_acc', 'AC_acc', 'DE_acc'), v.names="accuracy",
timevar='trialType',times=c('AB', 'CA', 'DE'), new.row.names=1:z, direction = 'long')
FULLfinalSummaryL$ratID <-as.factor(FULLfinalSummaryL$ratID)
FULLfinalSummaryL$session <-as.factor(FULLfinalSummaryL$session)
FULLfinalSummaryL$trialType <- as.factor(FULLfinalSummaryL$trialType)
FULLfinalSummaryW$ratID <-as.factor(FULLfinalSummaryW$ratID)
FULLfinalSummaryW$session <-as.factor(FULLfinalSummaryW$session)
#making summary table for full task
FULLsummaryTable <- aggregate(accuracy~trialType+session+condition, data=FULLfinalSummaryL, FUN=(mean))
tempTable <- aggregate(accuracy~trialType+session, data=FULLfinalSummaryL, FUN=(sd))
FULLsummaryTable<- as.data.frame(FULLsummaryTable)
FULLsummaryTable$sd <- tempTable$accuracy*100
tempTable$accuracy <- tempTable$accuracy/sqrt(y)
FULLsummaryTable$se <- tempTable$accuracy*100
FULLsummaryTable$accuracy <- FULLsummaryTable$accuracy * 100
#part 1 - AB acquisition
#check distribution
describe(ABsummary)
hist(ABsummary$accuracy)
#distribution is actually a bit strange, though all above chance - also pretty small number of rats
plot(accuracy~session, data=ABsummary)
mean(ABsummary$accuracy)
# no interesting results, though by the end of the first session the group average was almost 80% accuracy
#part 2 - full task
describe(FULLfinalSummaryW)
describe(FULLfinalSummaryL)
hist(FULLfinalSummaryL$accuracy)
#accuracy for the full task is normally distributed
plot(accuracy~session, data=FULLfinalSummaryL)
#looks like session didn't ahve much effect
plot(accuracy~trialType, data=FULLfinalSummaryL)
#weak but present effect for trial type
#inferential tests of full task dataaov1 <- aov_ez("ratID","accuracy",FULLfinalSummaryL,within = c("trialType", "session"))
#not sure if above will let me check assumptions
aov2<-aov(accuracy~trialType*session + Error(ratID / (trialType*session)), data = FULLfinalSummaryL)
print(model.tables(aov2,"means"))
?ezANOVA
ezANOVA(data=FULLfinalSummaryL, dv=accuracy, wid = ratID,within=(trialType,session),detailed=TRUE)
ezANOVA(data=FULLfinalSummaryL, dv=accuracy, wid = ratID,within=c(trialType,session),detailed=TRUE)
testAOV <- ezANOVA(data=FULLfinalSummaryL, dv=accuracy, wid = ratID,within=c(trialType,session),detailed=TRUE)
testAOV$ANOVA
testAOV <- ezANOVA(data=FULLfinalSummaryL, dv=accuracy, wid = ratID,within=c(trialType,session),detailed=TRUE,return_aov = TRUE)
summary(testAOV)
testAOV$aov
x <-testAOV$aov
summary(x)
?lsmeans
lsmeans(x, "trialType", contr = "pairwise", adjust = "holm")
library(lsmeans)
lsmeans(x, "trialType", contr = "pairwise", adjust = "holm")
