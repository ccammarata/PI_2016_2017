library(foreign)
#general motif for reading in and cleaning data, although these files will already have had the
#column with tag text removed
data1 <- read.csv("24hr_09_21_16_1&2.csv", header=FALSE)
len <- length(data1[,1])
data1 <- data1[8:len,]
len <- length(data1[,1])
data1 <- data1*-1
colnames(data1) <- c("tags","enz_chan1","sent_chan2","nothing_1","nothing_2")
data1$seconds <- seq(0,((len-1)/2),0.5)
#plotting
# x= max(data1[2:5])
# plot(data1$seconds,data1$chan1, ylim=c(0,x), type = 'l')
# lines(data1$chan2)
# lines(data1$chan3)
# lines(data1$chan4)
for (channel in c(2,3)){
plot(data1$seconds,data1[,channel],type = 'l',xlab= 'seconds', ylab = names(data1[channel]),
main ='24hr_09_21_16_1&2')
}
data2 <- read.csv("24hr_09_21_16_3&4.csv", header=FALSE)
len <- length(data2[,1])
data2 <- data2[8:len,]
len <- length(data2[,1])
data2 <- data2*-1
colnames(data2) <- c("tags","sent_chan1","enz_chan2","sent_chan3","enz_chan4")
data2$seconds <- seq(0,((len-1)/2),0.5)
#plotting
for (channel in c(2,3,4,5)){
plot(data2$seconds,data2[,channel],type = 'l',xlab= 'seconds', ylab = names(data2[channel]),
main ='24hr_09_21_16_3&4')
}
data3 <- read.csv("9_22_16_5.6_48hrs.csv", header=FALSE)
len <- length(data3[,1])
data3 <- data3[8:len,]
len <- length(data3[,1])
data3 <- data3*-1
colnames(data3) <- c("tags","sent_chan1","enz_chan2","sent_chan3","enz_chan4")
data3$seconds <- seq(0,((len-1)/2),0.5)
#plotting
for (channel in c(2,3,4,5)){
plot(data3$seconds,data3[,channel],type = 'l',xlab= 'seconds', ylab = names(data3[channel]),
main ='9_22_16_5.6_48hrs')
}
data4 <- read.csv("9_22_16_3.4_24hrs.csv", header=FALSE)
len <- length(data4[,1])
data4 <- data4[8:len,]
len <- length(data4[,1])
data4 <- data4*-1
colnames(data4) <- c("tags","sent_chan1","enz_chan2","sent_chan3","enz_chan4")
data4$seconds <- seq(0,((len-1)/2),0.5)
#plotting
for (channel in c(2,3,4,5)){
plot(data4$seconds,data4[,channel],type = 'l',xlab= 'seconds', ylab = names(data4[channel]),
main ='9_22_16_3.4_24hrs')
}
data5 <- read.csv("9_22_16_1.2_24hrs.csv", header=FALSE)
len <- length(data5[,1])
data5 <- data5[8:len,]
len <- length(data5[,1])
data5 <- data5*-1
colnames(data5) <- c("tags","sent_chan1","enz_chan2","sent_chan3","enz_chan4")
data5$seconds <- seq(0,((len-1)/2),0.5)
#plotting
for (channel in c(2,3,4,5)){
plot(data5$seconds,data5[,channel],type = 'l',xlab= 'seconds', ylab = names(data5[channel]),
main ='9_22_16_1.2_24hrs')
}
library(foreign)
#general motif for reading in and cleaning data, although these files will already have had the
#column with tag text removed
data1 <- read.csv("24hr_09_21_16_1&2.csv", header=FALSE)
len <- length(data1[,1])
data1 <- data1[8:len,]
len <- length(data1[,1])
data1 <- data1*-1
colnames(data1) <- c("tags","enz_chan1","sent_chan2","nothing_1","nothing_2")
data1$seconds <- seq(0,((len-1)/2),0.5)
#plotting
# x= max(data1[2:5])
# plot(data1$seconds,data1$chan1, ylim=c(0,x), type = 'l')
# lines(data1$chan2)
# lines(data1$chan3)
# lines(data1$chan4)
for (channel in c(2,3)){
plot(data1$seconds,data1[,channel],type = 'l',xlab= 'seconds', ylab = names(data1[channel]),
main ='24hr_09_21_16_1&2')
}
data2 <- read.csv("24hr_09_21_16_3&4.csv", header=FALSE)
len <- length(data2[,1])
data2 <- data2[8:len,]
len <- length(data2[,1])
data2 <- data2*-1
colnames(data2) <- c("tags","sent_chan1","enz_chan2","sent_chan3","enz_chan4")
data2$seconds <- seq(0,((len-1)/2),0.5)
#plotting
for (channel in c(2,3,4,5)){
plot(data2$seconds,data2[,channel],type = 'l',xlab= 'seconds', ylab = names(data2[channel]),
main ='24hr_09_21_16_3&4')
}
data3 <- read.csv("9_22_16_5.6_48hrs.csv", header=FALSE)
len <- length(data3[,1])
data3 <- data3[8:len,]
len <- length(data3[,1])
data3 <- data3*-1
colnames(data3) <- c("tags","sent_chan1","enz_chan2","sent_chan3","enz_chan4")
data3$seconds <- seq(0,((len-1)/2),0.5)
#plotting
for (channel in c(2,3,4,5)){
plot(data3$seconds,data3[,channel],type = 'l',xlab= 'seconds', ylab = names(data3[channel]),
main ='9_22_16_5.6_48hrs')
}
data4 <- read.csv("9_22_16_3.4_24hrs.csv", header=FALSE)
len <- length(data4[,1])
data4 <- data4[8:len,]
len <- length(data4[,1])
data4 <- data4*-1
colnames(data4) <- c("tags","sent_chan1","enz_chan2","sent_chan3","enz_chan4")
data4$seconds <- seq(0,((len-1)/2),0.5)
#plotting
for (channel in c(2,3,4,5)){
plot(data4$seconds,data4[,channel],type = 'l',xlab= 'seconds', ylab = names(data4[channel]),
main ='9_22_16_3.4_24hrs')
}
data5 <- read.csv("9_22_16_1.2_24hrs.csv", header=FALSE)
len <- length(data5[,1])
data5 <- data5[8:len,]
len <- length(data5[,1])
data5 <- data5*-1
colnames(data5) <- c("tags","sent_chan1","enz_chan2","sent_chan3","enz_chan4")
data5$seconds <- seq(0,((len-1)/2),0.5)
#plotting
for (channel in c(2,3,4,5)){
plot(data5$seconds,data5[,channel],type = 'l',xlab= 'seconds', ylab = names(data5[channel]),
main ='9_22_16_1.2_24hrs')
}
#column with tag text removed
data1 <- read.csv("24hr_09_21_16_1&2.csv", header=FALSE)
len <- length(data1[,1])
data1 <- data1[8:len,]
len <- length(data1[,1])
data1 <- data1*-1
colnames(data1) <- c("tags","enz_chan1","sent_chan2","nothing_1","nothing_2")
data1$seconds <- seq(0,((len-1)/2),0.5)
#plotting
# x= max(data1[2:5])
# plot(data1$seconds,data1$chan1, ylim=c(0,x), type = 'l')
# lines(data1$chan2)
# lines(data1$chan3)
# lines(data1$chan4)
for (channel in c(2,3)){
plot(data1$seconds,data1[,channel],type = 'l',xlab= 'seconds', ylab = names(data1[channel]),
main ='24hr_09_21_16_1&2')
}
data1 <- read.csv("24hr_09_21_16_1&2.csv", header=FALSE)
library(afex)
library(Rcpp)
install.packages("Rcpp")
install.packages("loo")
setwd("~/GitHub/PI_2016_2017/PI_drug_free_Oct2016")
library(foreign)
library(psych)
library(reshape2)
library(ggplot2)
library(car)
library(Rmisc)
library(gmodels)
library(wesanderson)
# PI full task analysis
library(foreign)
library(psych)
library(reshape2)
library(ggplot2)
library(car)
library(Rmisc)
library(gmodels)
library(wesanderson)
# for AB acquisition
sessList <- list(23,24,25)#list session nubmers here
ratList <- list(25,28,35,36,46,49,50,53,57,63,64)#list rat number here
x <- length(sessList)
y <- length(ratList)
rowsNeeded <- (x*y)
#to indicate lesion condition of animals
sapGroup = list(28, 36,50,63,64)
conGroup = list(25,35,46,49,53,57)
ABsummary <- matrix(data = NA, nrow = rowsNeeded, ncol=3)
colnames(summary)<- c('ratID', 'session', 'AB_acc')
criteriaOverview <- matrix(data = NA, nrow = rowsNeeded, ncol=2)
i = 1
for (sessNum in sessList){
for (rat in ratList) {
filename <- paste("U3_",rat,"_",sessNum,".csv", sep="")
criteriaFilename <- paste("U3_CriteriaMet",rat,"_",sessNum,".csv", sep="")
print(filename)
currentData <- read.csv(filename, header=TRUE, sep="\t")
currentData$resp2 <- ifelse(currentData$Response == "correct", 1,0)
currentAB <- subset(currentData, trialType == "AB")
ABacc <- mean(currentAB$resp2)
ABsummary[i,0:5] <- c(rat, sessNum, ABacc, ACacc, DEacc)
i=i+1
}
}
ABsummaryTable <- aggregate(accuracy~trialType+session+condition, data=ABfinalSummaryL, FUN=(mean))
tempTable <- aggregate(accuracy~trialType+session, data=ABfinalSummaryL, FUN=(sd))
ABsummaryTable<- as.data.frame(ABsummaryTable)
ABsummaryTable$sd <- tempTable$accuracy*100
tempTable$accuracy <- tempTable$accuracy/sqrt(y)
ABsummaryTable$se <- tempTable$accuracy*100
ABsummaryTable$accuracy <- ABsummaryTable$accuracy * 100
#for full task
sessList <- list(27, 28, 29, 30)#list session nubmers here
ratList <- list(25,28,35,36,46,49,50,53,57,63,64)#list rat number here
x <- length(sessList)
y <- length(ratList)
rowsNeeded <- (x*y)
#to indicate lesion condition of animals
sapGroup = list(28, 36,50,63,64)
conGroup = list(25,35,46,49,53,57)
FULLsummary <- matrix(data = NA, nrow = rowsNeeded, ncol=5)
colnames(summary)<- c('ratID', 'session', 'AB_acc', 'AC_acc', 'DE_acc')
criteriaOverview <- matrix(data = NA, nrow = rowsNeeded, ncol=2)
i = 1
for (sessNum in sessList){
for (rat in ratList) {
filename <- paste("U3_",rat,"_",sessNum,".csv", sep="")
criteriaFilename <- paste("U3_CriteriaMet",rat,"_",sessNum,".csv", sep="")
print(filename)
currentData <- read.csv(filename, header=TRUE, sep="\t")
currentData$resp2 <- ifelse(currentData$Response == "correct", 1,0)
currentAB <- subset(currentData, trialType == "AB")
ABacc <- mean(currentAB$resp2)
currentDE <- subset(currentData, trialType == "DE")
DEacc <- mean(currentDE$resp2)
currentAC <- subset(currentData, trialType == "CA")
ACacc <- mean(currentAC$resp2)
FULLsummary[i,0:5] <- c(rat, sessNum, ABacc, ACacc, DEacc)
i=i+1
}
}
#prepare wide and long form data frames for full task
finalSummaryW <- data.frame(summary)
finalSummaryW$id <- finalSummaryW$rat
finalSummaryW$condition <- ifelse(is.element(finalSummaryW$ratID, sapGroup) ,'sap','control')
z = rowsNeeded*3
FULLfinalSummaryL <- reshape(finalSummaryW, varying = c('AB_acc', 'AC_acc', 'DE_acc'), v.names="accuracy",
timevar='trialType',times=c('AB', 'CA', 'DE'), new.row.names=1:z, direction = 'long')
#making summary table for full task
FULLsummaryTable <- aggregate(accuracy~trialType+session+condition, data=FULLfinalSummaryL, FUN=(mean))
tempTable <- aggregate(accuracy~trialType+session, data=FULLfinalSummaryL, FUN=(sd))
FULLsummaryTable<- as.data.frame(FULLsummaryTable)
FULLsummaryTable$sd <- tempTable$accuracy*100
tempTable$accuracy <- tempTable$accuracy/sqrt(y)
FULLsummaryTable$se <- tempTable$accuracy*100
FULLsummaryTable$accuracy <- FULLsummaryTable$accuracy * 100
library(foreign)
library(psych)
library(reshape2)
library(ggplot2)
library(car)
library(Rmisc)
library(gmodels)
library(wesanderson)
# for AB acquisition
sessList <- list(23,24,25)#list session nubmers here
ratList <- list(25,28,35,36,46,49,50,53,57,63,64)#list rat number here
x <- length(sessList)
y <- length(ratList)
rowsNeeded <- (x*y)
#to indicate lesion condition of animals
sapGroup = list(28, 36,50,63,64)
conGroup = list(25,35,46,49,53,57)
ABsummary <- matrix(data = NA, nrow = rowsNeeded, ncol=3)
colnames(summary)<- c('ratID', 'session', 'AB_acc')
criteriaOverview <- matrix(data = NA, nrow = rowsNeeded, ncol=2)
ABsummary <- matrix(data = NA, nrow = rowsNeeded, ncol=3)
View(ABsummary)
ABsummary <- matrix(data = NA, nrow = rowsNeeded, ncol=3)
colnames(ABsummary)<- c('ratID', 'session', 'AB_acc')
i = 1
for (sessNum in sessList){
for (rat in ratList) {
filename <- paste("U3_",rat,"_",sessNum,".csv", sep="")
criteriaFilename <- paste("U3_CriteriaMet",rat,"_",sessNum,".csv", sep="")
print(filename)
currentData <- read.csv(filename, header=TRUE, sep="\t")
currentData$resp2 <- ifelse(currentData$Response == "correct", 1,0)
currentAB <- subset(currentData, trialType == "AB")
ABacc <- mean(currentAB$resp2)
ABsummary[i,0:5] <- c(rat, sessNum, ABacc, ACacc, DEacc)
i=i+1
}
}
sessList <- list(27, 28, 29, 30)#list session nubmers here
ratList <- list(25,28,35,36,46,49,50,53,57,63,64)#list rat number here
x <- length(sessList)
y <- length(ratList)
rowsNeeded <- (x*y)
#to indicate lesion condition of animals
sapGroup = list(28, 36,50,63,64)
conGroup = list(25,35,46,49,53,57)
FULLsummary <- matrix(data = NA, nrow = rowsNeeded, ncol=5)
colnames(FULLsummary)<- c('ratID', 'session', 'AB_acc', 'AC_acc', 'DE_acc')
i = 1
for (sessNum in sessList){
for (rat in ratList) {
filename <- paste("U3_",rat,"_",sessNum,".csv", sep="")
criteriaFilename <- paste("U3_CriteriaMet",rat,"_",sessNum,".csv", sep="")
print(filename)
currentData <- read.csv(filename, header=TRUE, sep="\t")
currentData$resp2 <- ifelse(currentData$Response == "correct", 1,0)
currentAB <- subset(currentData, trialType == "AB")
ABacc <- mean(currentAB$resp2)
currentDE <- subset(currentData, trialType == "DE")
DEacc <- mean(currentDE$resp2)
currentAC <- subset(currentData, trialType == "CA")
ACacc <- mean(currentAC$resp2)
FULLsummary[i,0:5] <- c(rat, sessNum, ABacc, ACacc, DEacc)
i=i+1
}
}
#prepare wide and long form data frames for full task
finalSummaryW <- data.frame(summary)
finalSummaryW$id <- finalSummaryW$rat
finalSummaryW$condition <- ifelse(is.element(finalSummaryW$ratID, sapGroup) ,'sap','control')
z = rowsNeeded*3
FULLfinalSummaryL <- reshape(finalSummaryW, varying = c('AB_acc', 'AC_acc', 'DE_acc'), v.names="accuracy",
timevar='trialType',times=c('AB', 'CA', 'DE'), new.row.names=1:z, direction = 'long')
View(finalSummaryW)
i = 1
for (sessNum in sessList){
for (rat in ratList) {
filename <- paste("U3_",rat,"_",sessNum,".csv", sep="")
criteriaFilename <- paste("U3_CriteriaMet",rat,"_",sessNum,".csv", sep="")
print(filename)
currentData <- read.csv(filename, header=TRUE, sep="\t")
currentData$resp2 <- ifelse(currentData$Response == "correct", 1,0)
currentAB <- subset(currentData, trialType == "AB")
ABacc <- mean(currentAB$resp2)
currentDE <- subset(currentData, trialType == "DE")
DEacc <- mean(currentDE$resp2)
currentAC <- subset(currentData, trialType == "CA")
ACacc <- mean(currentAC$resp2)
FULLsummary[i,0:5] <- c(rat, sessNum, ABacc, ACacc, DEacc)
i=i+1
}
}
View(FULLsummary)
finalSummaryW <- data.frame(FULLsummary)
finalSummaryW$id <- finalSummaryW$rat
finalSummaryW$condition <- ifelse(is.element(finalSummaryW$ratID, sapGroup) ,'sap','control')
z = rowsNeeded*3
FULLfinalSummaryL <- reshape(finalSummaryW, varying = c('AB_acc', 'AC_acc', 'DE_acc'), v.names="accuracy",
timevar='trialType',times=c('AB', 'CA', 'DE'), new.row.names=1:z, direction = 'long')
FULLsummaryTable <- aggregate(accuracy~trialType+session+condition, data=FULLfinalSummaryL, FUN=(mean))
tempTable <- aggregate(accuracy~trialType+session, data=FULLfinalSummaryL, FUN=(sd))
FULLsummaryTable<- as.data.frame(FULLsummaryTable)
FULLsummaryTable$sd <- tempTable$accuracy*100
tempTable$accuracy <- tempTable$accuracy/sqrt(y)
FULLsummaryTable$se <- tempTable$accuracy*100
FULLsummaryTable$accuracy <- FULLsummaryTable$accuracy * 100
FULLfinalSummaryL$ratID <-as.factor(FULLfinalSummaryL$ratID)
finalSummaryW <- data.frame(FULLsummary)
finalSummaryW$id <- as.factor(finalSummaryW$rat)
finalSummaryW$condition <- ifelse(is.element(finalSummaryW$ratID, sapGroup) ,'sap','control')
z = rowsNeeded*3
FULLfinalSummaryL <- reshape(finalSummaryW, varying = c('AB_acc', 'AC_acc', 'DE_acc'), v.names="accuracy",
timevar='trialType',times=c('AB', 'CA', 'DE'), new.row.names=1:z, direction = 'long')
#making summary table for full task
FULLsummaryTable <- aggregate(accuracy~trialType+session+condition, data=FULLfinalSummaryL, FUN=(mean))
tempTable <- aggregate(accuracy~trialType+session, data=FULLfinalSummaryL, FUN=(sd))
FULLsummaryTable<- as.data.frame(FULLsummaryTable)
FULLsummaryTable$sd <- tempTable$accuracy*100
tempTable$accuracy <- tempTable$accuracy/sqrt(y)
FULLsummaryTable$se <- tempTable$accuracy*100
FULLsummaryTable$accuracy <- FULLsummaryTable$accuracy * 100
finalSummaryW$condition <- ifelse(is.element(finalSummaryW$ratID, sapGroup) ,'sap','control')
z = rowsNeeded*3
FULLfinalSummaryL <- reshape(finalSummaryW, varying = c('AB_acc', 'AC_acc', 'DE_acc'), v.names="accuracy",
timevar='trialType',times=c('AB', 'CA', 'DE'), new.row.names=1:z, direction = 'long')
FULLfinalSummaryL$ratID <-as.factor(FULLfinalSummaryL$ratID)
#making summary table for full task
FULLsummaryTable <- aggregate(accuracy~trialType+session+condition, data=FULLfinalSummaryL, FUN=(mean))
tempTable <- aggregate(accuracy~trialType+session, data=FULLfinalSummaryL, FUN=(sd))
FULLsummaryTable<- as.data.frame(FULLsummaryTable)
FULLsummaryTable$sd <- tempTable$accuracy*100
tempTable$accuracy <- tempTable$accuracy/sqrt(y)
FULLsummaryTable$se <- tempTable$accuracy*100
FULLsummaryTable$accuracy <- FULLsummaryTable$accuracy * 100
FULLfinalSummaryW$ratID <-as.factor(FULLfinalSummaryW$ratID)
finalSummaryW$ratID <-as.factor(finalSummaryW$ratID)
FULLfinalSummaryL$session <-as.factor(FULLfinalSummaryL$session)
finalSummaryW$session <-as.factor(finalSummaryW$session)
